{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/ExpenseFilter/ExpensesFilter.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","classes","className","children","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","expensesContent","items","length","map","expense","id","ExpensesFilter","onChange","e","onChangeFilter","target","value","selected","Chart","dataPointValues","dataPoints","dataPoint","Math","max","classNam","label","lable","ExpensesChart","chartDataPoints","expenses","getMonth","Exprenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","console","log","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","Date","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","onSaveExpense","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","expensedData","random","onAddExpense","expensesMock","App","setExpenses","prevEstate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd6e7caa.chunk.js","sourcesContent":["import \"./Card.css\";\nconst Card = (props) => {\n  const classes = \"card \" + props.className;\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import \"./ExpenseDate.css\";\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString(\"es-AR\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"es-AR\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n  return (\n    <div className=\"expense-date\">\n      {/* <div>{props.date.toISOString()}</div> */}\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import \"./ExpenseItem.css\";\nimport Card from \"../UI/Card\";\nimport ExpenseDate from \"./ExpenseDate\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n    </Card>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\nconst ExpensesList = (props) => {\n  let expensesContent = (\n    <h2 className=\"expenses-list__fallback\">No hay gastos encontrados.</h2>\n  );\n\n  if (props.items.length > 0) {\n    expensesContent = props.items.map((expense) => {\n      return (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      );\n    });\n  }\n  return <ul className=\"expenses-list\">{expensesContent}</ul>;\n};\n\nexport default ExpensesList;\n","import React from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const dropDownHandler = (e) => {\n    props.onChangeFilter(e.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filtro por a√±o</label>\n        <select onChange={dropDownHandler} value={props.selected}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from \"react\";\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximun = Math.max(...dataPointValues);\n  return (\n    <div classNam=\"chart\">\n      {props.dataPoints.map((dataPoint) => {\n        <ChartBar\n          key={dataPoint.lable}\n          label={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximun}\n        />;\n      })}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Ene\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Abr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Ago\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dic\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); //obtengo el mes\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return (\n    <div>\n      <Chart dataPoints={chartDataPoints} />\n    </div>\n  );\n};\n\nexport default ExpensesChart;\n","import Card from \"../UI/Card\";\nimport \"./Expenses.css\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesFilter from \"../ExpenseFilter/ExpensesFilter\";\nimport { useState } from \"react\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nconst Exprenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n    console.log(selectedYear);\n    console.log(\"En Expenses.js\");\n  };\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  // const expenses = props.items.map((expense, i) => {\n  //   return (\n  //     <ExpenseItem\n  //       key={i}\n  //       title={expense.title}\n  //       amount={expense.amount}\n  //       date={expense.date}\n  //     />\n  //   );\n  // });\n\n  return (\n    <div>\n      <li>\n        <Card className=\"expenses\">\n          <ExpensesFilter\n            selected={filteredYear}\n            onChangeFilter={filterChangeHandler}\n          />\n          <ExpensesChart expenses={filteredExpenses} />\n          <ExpensesList items={filteredExpenses} />\n        </Card>\n      </li>\n    </div>\n  );\n};\n\nexport default Exprenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nfunction ExpenseForm(props) {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(0);\n  const [enteredDate, setEnteredDate] = useState(new Date());\n\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: \"\",\n  //   enteredAmount: \"\",\n  //   enteredDate: \"\",\n  // });\n\n  const titleChangeHandler = (e) => {\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: e.target.value };\n    // });\n    setEnteredTitle(e.target.value);\n  };\n\n  const amountChangeHandler = (e) => {\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredAmount: e.target.value };\n    // });\n    setEnteredAmount(e.target.value);\n  };\n\n  const dateChangeHandler = (e) => {\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredDate: e.target.value };\n    // });\n    setEnteredDate(e.target.value);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate),\n    };\n    props.onSaveExpense(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Titulo</label>\n          <input\n            type=\"text\"\n            onChange={titleChangeHandler}\n            value={enteredTitle}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Cantidad</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Fecha</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"submit\">Guardar</button>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancelar\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nfunction NewExpense(props) {\n  const [isEditing, setIsEditing] = useState(false);\n  const saveExpenseHandler = (enteredExpenseData) => {\n    const expensedData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expensedData);\n    console.log(expensedData);\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n  return (\n    <div className=\"new-expense\">\n      {!isEditing ? (\n        <button onClick={startEditingHandler}>Agregar nuevo gasto</button>\n      ) : (\n        <ExpenseForm\n          onSaveExpense={saveExpenseHandler}\n          onCancel={stopEditingHandler}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default NewExpense;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Exprenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst expensesMock = [\n  {\n    id: \"e1\",\n    title: \"Papel Higienico\",\n    amount: 4.28,\n    date: new Date(2021, 2, 1),\n  },\n  {\n    id: \"e2\",\n    title: \"Nueva Television\",\n    amount: 124.48,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"nuevo escritorio\",\n    amount: 139.18,\n    date: new Date(2021, 2, 11),\n  },\n  {\n    id: \"e4\",\n    title: \"Seguro del auto\",\n    amount: 294.68,\n    date: new Date(2021, 2, 21),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState([...expensesMock]);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevEstate) => {\n      return [expense, ...prevEstate];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Exprenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}