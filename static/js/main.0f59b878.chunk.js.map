{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/ExpenseFilter/ExpensesFilter.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","classes","className","children","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ExpensesFilter","onChange","e","onChangeFilter","target","value","selected","Exprenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","console","log","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","Date","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","onSaveExpense","type","min","step","max","NewExpense","enteredExpenseData","expensedData","Math","random","onAddExpense","expensesMock","App","expenses","setExpenses","prevEstate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f59b878.chunk.js","sourcesContent":["import \"./Card.css\";\nconst Card = (props) => {\n  const classes = \"card \" + props.className;\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import \"./ExpenseDate.css\";\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString(\"es-AR\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"es-AR\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n  return (\n    <div className=\"expense-date\">\n      {/* <div>{props.date.toISOString()}</div> */}\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import \"./ExpenseItem.css\";\nimport Card from \"../UI/Card\";\nimport ExpenseDate from \"./ExpenseDate\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n    </Card>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\n\nconst ExpensesList = (props) => {\n  let expensesContent = <p>No hay gastos encontrados.</p>;\n\n  if (props.items.length > 0) {\n    expensesContent = props.items.map((expense) => {\n      return (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      );\n    });\n  }\n  return <ul></ul>;\n};\n\nexport default ExpensesList;\n","import React from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const dropDownHandler = (e) => {\n    props.onChangeFilter(e.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filtro por a√±o</label>\n        <select onChange={dropDownHandler} value={props.selected}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import Card from \"../UI/Card\";\nimport \"./Expenses.css\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesFilter from \"../ExpenseFilter/ExpensesFilter\";\nimport { useState } from \"react\";\n\nconst Exprenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n    console.log(selectedYear);\n    console.log(\"En Expenses.js\");\n  };\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  // const expenses = props.items.map((expense, i) => {\n  //   return (\n  //     <ExpenseItem\n  //       key={i}\n  //       title={expense.title}\n  //       amount={expense.amount}\n  //       date={expense.date}\n  //     />\n  //   );\n  // });\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        <ExpensesList items={filteredExpenses} />\n      </Card>\n    </div>\n  );\n};\n\nexport default Exprenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nfunction ExpenseForm(props) {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(0);\n  const [enteredDate, setEnteredDate] = useState(new Date());\n\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: \"\",\n  //   enteredAmount: \"\",\n  //   enteredDate: \"\",\n  // });\n\n  const titleChangeHandler = (e) => {\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: e.target.value };\n    // });\n    setEnteredTitle(e.target.value);\n  };\n\n  const amountChangeHandler = (e) => {\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredAmount: e.target.value };\n    // });\n    setEnteredAmount(e.target.value);\n  };\n\n  const dateChangeHandler = (e) => {\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredDate: e.target.value };\n    // });\n    setEnteredDate(e.target.value);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate),\n    };\n    props.onSaveExpense(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Titulo</label>\n          <input\n            type=\"text\"\n            onChange={titleChangeHandler}\n            value={enteredTitle}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Cantidad</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Fecha</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"submit\">Guardar</button>\n      </div>\n    </form>\n  );\n}\n\nexport default ExpenseForm;\n","import React from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nfunction NewExpense(props) {\n  const saveExpenseHandler = (enteredExpenseData) => {\n    const expensedData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expensedData);\n    console.log(expensedData);\n  };\n  return (\n    <div className=\"new-expense\">\n      <ExpenseForm onSaveExpense={saveExpenseHandler} />\n    </div>\n  );\n}\n\nexport default NewExpense;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Exprenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst expensesMock = [\n  { id: \"e1\", title: \"Toile paper\", amount: 4.28, date: new Date(2021, 2, 1) },\n  { id: \"e2\", title: \"New Tv\", amount: 124.48, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"New desktop\",\n    amount: 139.18,\n    date: new Date(2021, 2, 11),\n  },\n  {\n    id: \"e4\",\n    title: \"Car insurance\",\n    amount: 294.68,\n    date: new Date(2021, 2, 21),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState([...expensesMock]);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevEstate) => {\n      return [expense, ...prevEstate];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Exprenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}